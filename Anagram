import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the anagram function below.
    static int anagram(String s) {
    int c=0;
     if(s.length()%2!=0)
     return -1;
     else{
         
         String s1=s.substring(0,(s.length()/2));
         String s2=s.substring((s.length()/2),s.length());
         int [] a=new int[26];
         for(int i=0;i<s1.length();i++){
           a[(int)s1.charAt(i)-97]++;
         }
         for(int i=0;i<s2.length();i++){
           a[(int)s2.charAt(i)-97]--;
         }
         for(int b:a){
             if(b>0)
           c+=b;
         }
     }
     return c;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            String s = scanner.nextLine();

            int result = anagram(s);

            bufferedWriter.write(String.valueOf(result));
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
