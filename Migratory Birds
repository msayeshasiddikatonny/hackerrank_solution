import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

public class Solution {

    // Complete the migratoryBirds function below.
    static int migratoryBirds(List<Integer> arr) {
     int [] a=new int[arr.size()];
     for(int i=0;i<a.length;i++){
         a[i]=arr.get(i);
     }
     int max=a[0];
     for(int i=1;i<a.length;i++){
      if(max<a[i])
      max=a[i];
     }
     int [] c=new int[max+1];
     for(int i=0;i<a.length;i++){
     c[a[i]]++;
     }
     int max2=c[0];
     for(int i=1;i<c.length;i++){
      if(max2<c[i])
      max2=c[i];
     }
     int p=0;
     for(int i=0;i<c.length;i++){
       if(c[i]==max2){
           p=i;
           break;
       }
        
     }
     return p;
    }

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
