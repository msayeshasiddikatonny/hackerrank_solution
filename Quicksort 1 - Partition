import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the quickSort function below.
    static int[] quickSort(int[] arr) {
     int p=arr[0];
     List<Integer> listLeft = new ArrayList<Integer>(); 
     List<Integer> listRight = new ArrayList<Integer>(); 
     for(int i=1;i<arr.length;i++){
      if(arr[i]>p){
       listRight.add(arr[i]);
      }
      else{
          listLeft.add(arr[i]);
      }
     }
     int [] a=new int[arr.length];
     int j=0;
     for(j=0;j<listLeft.size();j++){
       a[j]=listLeft.get(j);
     }
     a[j++]=p;
     for(int k=0;k<listRight.size();k++){
       a[j++]=listRight.get(k);
     }
     return a;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int[] result = quickSort(arr);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write(" ");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
