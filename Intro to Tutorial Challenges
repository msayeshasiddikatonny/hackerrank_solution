import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {
    static int binarySearch(int [] arr,int l,int r,int v){
    int mid=(l+r)/2;
    if(arr[mid]==v)
    return mid;
    else if(arr[mid]>v)
    return binarySearch(arr,l,mid,v);
    else
    return binarySearch(arr,mid,r,v);
    }

    // Complete the introTutorial function below.
    static int introTutorial(int V, int[] arr) {
     int r=0;
     if(arr[0]==V  ){
       r=0;
     }
     else if(arr[arr.length-1]==V ){
     r=arr.length-1;
     }
     else{
     r=binarySearch(arr,0,arr.length-1,V);
     }
    return r;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int V = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int result = introTutorial(V, arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
