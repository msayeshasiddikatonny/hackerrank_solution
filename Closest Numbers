import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the closestNumbers function below.
    static int[] closestNumbers(int[] arr) {
     Arrays.sort(arr);
     List<Integer> list=new ArrayList<Integer>();
     int min=arr[1]-arr[0];
     list.add(arr[0]);list.add(arr[1]);
     for(int i=1;i<arr.length-1;i++){
         int temp=arr[i+1]-arr[i];
         if(temp<min){
             min=temp;
             list=new ArrayList<Integer>();
             list.add(arr[i]);list.add(arr[i+1]);
         }
         else if(temp==min){
          list.add(arr[i]);list.add(arr[i+1]);
         }
     }
     int [] a=new int[list.size()];
     for(int i=0;i<a.length;i++){
        a[i]=list.get(i);
     }
     return a;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int[] result = closestNumbers(arr);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write(" ");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
