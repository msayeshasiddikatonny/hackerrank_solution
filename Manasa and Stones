import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;
import java.util.List;
import java.util.ArrayList;
public class Solution {

    // Complete the stones function below.
    static int[] stones(int n, int a1, int b1) {
        int a=Math.min(a1,b1);
        int b=Math.max(a1,b1);
        int [] t=new int[1];
    if(a1==b1){
     t[0]=(n-1)*a1;
     return t;
    }
    List<Integer>list=new ArrayList<>();
    for(int i=n-1,j=n-1-i;i>-1 && j<n;i--,j++)
       list.add((i*a)+(j*b));
    int [] arr=new int[list.size()];
    for(int k=0;k<arr.length;k++)
    arr[k]=list.get(k);
    return arr;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int T = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int TItr = 0; TItr < T; TItr++) {
            int n = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            int a = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            int b = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            int[] result = stones(n, a, b);

            for (int i = 0; i < result.length; i++) {
                bufferedWriter.write(String.valueOf(result[i]));

                if (i != result.length - 1) {
                    bufferedWriter.write(" ");
                }
            }

            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
